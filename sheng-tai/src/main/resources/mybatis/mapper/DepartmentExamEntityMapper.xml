<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.daoli.sheng.tai.mapper.DepartmentExamEntityMapper" >
  <resultMap id="BaseResultMap" type="com.daoli.sheng.tai.entity.DepartmentExamEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="department_id" property="departmentId" jdbcType="VARCHAR" />
    <result column="exam_id" property="examId" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="valid" property="valid" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="DepartmentResultMap" type="com.daoli.sheng.tai.entity.DepartmentEntity" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="department_id" property="departmentId" jdbcType="VARCHAR" />
    <result column="department_name" property="departmentName" jdbcType="VARCHAR" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, department_id, exam_id, modify_time, create_time, valid
  </sql>
  <sql id="DepartmentE_Column_List" >
    id, department_id, department_name, modify_time, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tbl_department_exam
    where id = #{id,jdbcType=INTEGER} and valid = "1"
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tbl_department_exam
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.daoli.sheng.tai.entity.DepartmentExamEntity" >
    insert into tbl_department_exam (id, department_id, exam_id, 
      modify_time, create_time, valid
      )
    values (#{id,jdbcType=INTEGER}, #{departmentId,jdbcType=VARCHAR}, #{examId,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{valid,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.daoli.sheng.tai.entity.DepartmentExamEntity" >
    insert into tbl_department_exam
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="departmentId != null" >
        department_id,
      </if>
      <if test="examId != null" >
        exam_id,
      </if>
      <if test="modifyTime != null" >
        modify_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="valid != null" >
        valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null" >
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="examId != null" >
        #{examId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        #{valid,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.daoli.sheng.tai.entity.DepartmentExamEntity" >
    update tbl_department_exam
    <set >
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="examId != null" >
        exam_id = #{examId,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null" >
        valid = #{valid,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daoli.sheng.tai.entity.DepartmentExamEntity" >
    update tbl_department_exam
    set department_id = #{departmentId,jdbcType=VARCHAR},
      exam_id = #{examId,jdbcType=VARCHAR},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      valid = #{valid,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByField"  resultMap="BaseResultMap"  parameterType="com.daoli.sheng.tai.entity.DepartmentExamEntity" >

    select
    <include refid="Base_Column_List" />
    from tbl_department_exam
    where  valid = "1" and
    <trim prefix="(" suffix=")" suffixOverrides="and" >
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=VARCHAR} and
      </if>
      <if test="examId != null" >
        exam_id = #{examId,jdbcType=VARCHAR} and
      </if>
      <if test="modifyTime != null" >
        modify_time = #{modifyTime,jdbcType=TIMESTAMP} and
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP} and
      </if>
    </trim>
  </select>

  <select id="queryDepartmentExamByExamId"  resultMap="BaseResultMap"  parameterType="java.lang.String" >

    select
    <include refid="Base_Column_List" />
    from tbl_department_exam
    where  valid = "1" and
    <trim prefix="(" suffix=")" suffixOverrides="and" >
      <if test="examId != null" >
        exam_id = #{examId,jdbcType=VARCHAR}
      </if>
    </trim>
  </select>

  <select id="queryDepartmentExamByDepartmentId"  resultMap="BaseResultMap"  parameterType="java.lang.String" >

    select
    <include refid="Base_Column_List" />
    from tbl_department_exam
    where  valid = "1" and
    <trim prefix="(" suffix=")" suffixOverrides="and" >
      <if test="departmentId != null" >
        department_id = #{departmentId,jdbcType=VARCHAR} and
      </if>
    </trim>
  </select>



  <select id="queryAssignedDepartmentsByExamId"  resultMap="DepartmentResultMap"  parameterType="java.lang.String" >
    SELECT
    tbl_d.id, tbl_d.department_id, tbl_d.department_name, tbl_d.modify_time , tbl_d.create_time
    FROM tbl_department_exam tbl_d_e
    LEFT JOIN
    tbl_department tbl_d
    ON tbl_d.department_id = tbl_d_e.department_id
    WHERE exam_id = #{examId,jdbcType=VARCHAR} AND tbl_d_e.valid=1
    AND tbl_d.valid=1
  </select>

  <select id="queryNotAssignedDepartmentsByExamId"  resultMap="DepartmentResultMap"  parameterType="java.lang.String" >

    SELECT
      tbl_d.id, tbl_d.department_id, tbl_d.department_name, tbl_d.modify_time , tbl_d.create_time
    FROM
      tbl_department tbl_d
    where
      tbl_d.valid=1 and
      tbl_d.department_id not in (
        select
          tbl_d_e.department_id
        from
          tbl_department_exam tbl_d_e
        where tbl_d_e.valid=1 and
          exam_id = #{examId,jdbcType=VARCHAR}
      )


    <!--select-->
    <!--<include refid="DepartmentE_Column_List" />-->
    <!--from tbl_department where valid = 1 and department_id not in-->
    <!--(-->
    <!--select-->
    <!--department_id-->
    <!--from tbl_department_exam-->
    <!--where  valid = "1" and-->
    <!--<trim prefix="(" suffix=")" suffixOverrides="and" >-->
      <!--<if test="examId != null" >-->
        <!--exam_id = #{examId,jdbcType=VARCHAR}-->
      <!--</if>-->
    <!--</trim>-->
    <!--)-->
  </select>

</mapper>